import{b7 as v,r as y,c as u,b as m,w as o,m as c,n as q,bz as _,G as p,aI as B,l as x,e as T,a as P,aC as F,x as A}from"./chunks/theme.C_36pXDy.js";import{a as E}from"./chunks/aapl.CbpPDFPg.js";import{a as d}from"./chunks/alphabet.B9gro12k.js";import{D as C,v as w,C as D,c as S,o as I,ah as a,G as h,j as i,k,a as t,t as b}from"./chunks/framework.DM5DyJ2q.js";const R={style:{"border-bottom":"solid 2px currentColor"}},j={class:"language-js vp-adaptive-theme"},V={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},Y={class:"line"},X={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},G=JSON.parse('{"title":"Rule mark","description":"","frontmatter":{},"headers":[],"relativePath":"marks/rule.md","filePath":"marks/rule.md"}'),O={name:"marks/rule.md"},L=Object.assign(O,{setup(N){const g=C([]),r=C(v(y(1,29),y(1,26),(n,s)=>({season:n,number_in_season:s})));return w(()=>{u("../data/seattle-weather.csv",m).then(n=>g.value=n),u("../data/simpsons.csv",m).then(n=>r.value=n)}),(n,s)=>{const e=D("PlotRender");return I(),S("div",null,[s[14]||(s[14]=a("",3)),h(e,{options:{y:{grid:!0},marks:[o([0],{stroke:"var(--vp-c-red)"}),c(k(E),{x:"Date",y:"Close"})]}},null,8,["options"]),s[15]||(s[15]=a("",3)),h(e,{options:{y:{type:"log",grid:!0,label:"Change in price (%)",tickFormat:(l=>f=>l((f-1)*100))(_("+d"))},marks:[o([1],{stroke:"var(--vp-c-red)"}),c(k(E),q("first",{x:"Date",y:"Close"}))]}},null,8,["options"]),s[16]||(s[16]=a("",3)),h(e,{options:{x:{domain:[-4,4]},marks:[p({length:500},{x:B.source(x(42))(),strokeOpacity:.2})]}},null,8,["options"]),s[17]||(s[17]=a("",4)),h(e,{defer:"",options:{y:{grid:!0,label:"Temperature (°C)"},color:{scheme:"BuRd"},marks:[o([0]),p(g.value,{x:"date",y1:"temp_min",y2:"temp_max",stroke:"temp_min"})]}},null,8,["options"]),s[18]||(s[18]=a("",1)),i("p",null,[s[0]||(s[0]=t("In the dense ")),s[1]||(s[1]=i("a",{href:"https://observablehq.com/@observablehq/observable-plot-candlestick",target:"_blank",rel:"noreferrer"},"candlestick chart",-1)),s[2]||(s[2]=t(" below, three rules are drawn for each trading day: a gray rule spans the chart, showing gaps for weekends and holidays; a ")),i("span",R,b(n.$dark?"white":"black"),1),s[3]||(s[3]=t(" rule spans the day’s low and high; and a ")),s[4]||(s[4]=i("span",{style:{"border-bottom":"solid 2px var(--vp-c-green)"}},"green",-1)),s[5]||(s[5]=t(" or ")),s[6]||(s[6]=i("span",{style:{"border-bottom":"solid 2px var(--vp-c-red)"}},"red",-1)),s[7]||(s[7]=t(" rule spans the day’s open and close."))]),h(e,{defer:"",options:{inset:6,label:null,y:{grid:!0,label:"Stock price ($)"},color:{type:"threshold",range:["var(--vp-c-red)","var(--vp-c-green)"]},marks:[p(k(E),{x:"Date",y1:"Low",y2:"High"}),p(k(E),{x:"Date",y1:"Open",y2:"Close",stroke:l=>l.Close-l.Open,strokeWidth:4})]}},null,8,["options"]),s[19]||(s[19]=a("",3)),h(e,{defer:"",options:{marks:[p(r.value,F({y1:"min",y2:"max"},{x:"season",y:"imdb_rating"})),T(r.value,{x:"season",y:"imdb_rating",fill:"currentColor",stroke:"var(--vp-c-bg)"}),P(r.value,F({y:"median"},{x:"season",y:"imdb_rating",stroke:"var(--vp-c-red)"}))]}},null,8,["options"]),s[20]||(s[20]=i("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-simpsons-decline",target:"_blank",title:"Open on Observable"},"Fork",-1)),i("div",j,[s[12]||(s[12]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[13]||(s[13]=i("span",{class:"lang"},"js",-1)),i("pre",V,[i("code",null,[s[10]||(s[10]=a("",6)),i("span",Y,[s[8]||(s[8]=a("",9)),i("span",X,'"'+b(n.$dark?"black":"white")+'"',1),s[9]||(s[9]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}),",-1))]),s[11]||(s[11]=a("",6))])])]),s[21]||(s[21]=i("p",null,[t("Rules can indicate uncertainty or error by setting the "),i("a",{href:"./../features/markers"},[i("strong",null,"marker"),t(" option")]),t(" to "),i("em",null,"tick"),t("; this draws a small perpendicular line at the start and end of the rule. For example, to simulate ±10% error:")],-1)),h(e,{options:{x:{label:null},y:{percent:!0},marks:[A(k(d),{x:"letter",y:"frequency",fill:"var(--vp-c-blue)"}),p(k(d),{x:"letter",y1:l=>l.frequency*.9,y2:l=>l.frequency*1.1,marker:"tick"}),o([0])]}},null,8,["options"]),s[22]||(s[22]=a("",2)),h(e,{options:{x:{label:null,tickPadding:6,tickSize:0},y:{percent:!0},marks:[p(k(d),{x:"letter",y:"frequency",strokeWidth:2,markerEnd:"dot"})]}},null,8,["options"]),s[23]||(s[23]=a("",21))])}}});export{G as __pageData,L as default};
