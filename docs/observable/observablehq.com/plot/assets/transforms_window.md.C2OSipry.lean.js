import{p as E,D as v,v as b,C as f,c as C,o as q,j as i,G as k,ah as r,a,t as y,a2 as g,ak as B,k as t,al as m,aj as x}from"./chunks/framework.DM5DyJ2q.js";import{c as T,b as P,j as _,a as n,M as o,w as Y,bZ as S,c1 as A}from"./chunks/theme.C_36pXDy.js";import{s as e}from"./chunks/sf-temperatures.Oin0ITX4.js";const V={class:"label-input"},j={style:{"font-variant-numeric":"tabular-nums"}},O={class:"label-input"},I={style:{"margin-left":"0.5em"}},z={style:{"margin-left":"0.5em"}},D={style:{"margin-left":"0.5em"}},N={class:"label-input"},R={id:"window",tabindex:"-1"},G=JSON.parse('{"title":"Window transform","description":"","frontmatter":{},"headers":[],"relativePath":"transforms/window.md","filePath":"transforms/window.md"}'),X={name:"transforms/window.md"},J=Object.assign(X,{setup(W){const h=E(7);E(.01);const p=E("end"),u=E(!0);E("mean");const F=v([]);return b(()=>{T("../data/bls-metro-unemployment.csv",P).then(w=>F.value=w)}),(w,s)=>{const d=f("PlotRender"),c=f("VersionBadge");return q(),C("div",null,[s[29]||(s[29]=i("h1",{id:"window-transform",tabindex:"-1"},[a("Window transform "),i("a",{class:"header-anchor",href:"#window-transform","aria-label":'Permalink to "Window transform"'},"​")],-1)),s[30]||(s[30]=i("p",null,[a("The "),i("strong",null,"window transform"),a(" is a specialized "),i("a",{href:"./map"},"map transform"),a(" that computes a moving window and then derives summary statistics from the current window, say to compute rolling averages, rolling minimums, or rolling maximums.")],-1)),i("p",null,[s[5]||(s[5]=a("For example, the band chart below shows the daily high and low temperature in San Francisco. The ")),s[6]||(s[6]=i("span",{style:{"border-bottom":"solid 2px var(--vp-c-red)"}},"red",-1)),a(" line represents the "+y(h.value)+"-day average high, and the ",1),s[7]||(s[7]=i("span",{style:{"border-bottom":"solid 2px var(--vp-c-blue)"}},"blue",-1)),a(" line the "+y(h.value)+"-day average low.",1)]),i("p",null,[i("label",V,[s[8]||(s[8]=i("span",null,"Window size (k):",-1)),g(i("input",{type:"range","onUpdate:modelValue":s[0]||(s[0]=l=>h.value=l),min:"1",max:"100",step:"1"},null,512),[[B,h.value,void 0,{number:!0}]]),i("span",j,y(h.value.toLocaleString("en-US")),1)])]),k(d,{options:{y:{grid:!0,label:"Temperature (°F)"},marks:[_(t(e),{x:"date",y1:"low",y2:"high",fillOpacity:.3}),n(t(e),o(h.value,{x:"date",y:"low",stroke:"var(--vp-c-blue)"})),n(t(e),o(h.value,{x:"date",y:"high",stroke:"var(--vp-c-red)"}))]}},null,8,["options"]),s[31]||(s[31]=r("",4)),i("p",null,[i("span",O,[s[12]||(s[12]=a(" Anchor: ")),i("label",I,[g(i("input",{type:"radio",name:"anchor",value:"start","onUpdate:modelValue":s[1]||(s[1]=l=>p.value=l)},null,512),[[m,p.value]]),s[9]||(s[9]=a(" start "))]),i("label",z,[g(i("input",{type:"radio",name:"anchor",value:"middle","onUpdate:modelValue":s[2]||(s[2]=l=>p.value=l)},null,512),[[m,p.value]]),s[10]||(s[10]=a(" middle "))]),i("label",D,[g(i("input",{type:"radio",name:"anchor",value:"end","onUpdate:modelValue":s[3]||(s[3]=l=>p.value=l)},null,512),[[m,p.value]]),s[11]||(s[11]=a(" end "))])])]),k(d,{options:{y:{grid:!0,label:"Temperature (°F)"},marks:[n(t(e),{x:"date",y:"high",strokeOpacity:.3}),n(t(e),o({k:28,anchor:p.value},{x:"date",y:"high"}))]}},null,8,["options"]),s[32]||(s[32]=r("",3)),i("p",null,[s[13]||(s[13]=a("If ")),s[14]||(s[14]=i("strong",null,"strict",-1)),s[15]||(s[15]=a(" is false (the default), the window size is effectively reduced at the start or end of each series or both, depending on the ")),s[16]||(s[16]=i("strong",null,"anchor",-1)),s[17]||(s[17]=a(". Values computed with a truncated window may be noisy; if you would prefer to not show this data instead, set the ")),s[18]||(s[18]=i("strong",null,"strict",-1)),s[19]||(s[19]=a(" option to true. ")),k(c,{version:"0.6.0"}),s[20]||(s[20]=a(" The ")),s[21]||(s[21]=i("strong",null,"strict",-1)),s[22]||(s[22]=a(" option can also have a dramatic effect if some data is missing: when strict, the reducer will be skipped if any of the values in the current window are null, undefined, or NaN."))]),i("p",null,[i("label",N,[s[23]||(s[23]=a(" Strict: ")),g(i("input",{type:"checkbox","onUpdate:modelValue":s[4]||(s[4]=l=>u.value=l)},null,512),[[x,u.value]])])]),k(d,{options:{y:{grid:!0,label:"Temperature (°F)"},marks:[n(t(e),{x:"date",y:"low",strokeOpacity:.3}),n(t(e),o({k:28,anchor:"end",strict:u.value},{x:"date",y:"low"}))]}},null,8,["options"]),s[33]||(s[33]=r("",3)),k(d,{options:{y:{grid:!0,label:"Temperature (°F)"},marks:[n(t(e),{x:"date",y:"low",strokeOpacity:.3}),n(t(e),o({k:28,reduce:"min"},{x:"date",y:"low",stroke:"var(--vp-c-blue)"})),n(t(e),o({k:28,reduce:"max"},{x:"date",y:"low",stroke:"var(--vp-c-red)"})),n(t(e),o({k:28,reduce:"median"},{x:"date",y:"low"}))]}},null,8,["options"]),s[34]||(s[34]=r("",3)),k(d,{defer:"",options:{y:{grid:!0},color:{scheme:"BuYlRd",domain:[-.5,.5]},marks:[Y([0]),n(F.value,S({stroke:A({k:2,reduce:"difference"})},{x:"date",y:"unemployment",z:"division",stroke:"unemployment"}))]}},null,8,["options"]),s[35]||(s[35]=r("",11)),i("h2",R,[s[24]||(s[24]=a("window(")),s[25]||(s[25]=i("em",null,"k",-1)),s[26]||(s[26]=a(") ")),k(c,{version:"0.2.3"}),s[27]||(s[27]=a()),s[28]||(s[28]=i("a",{class:"header-anchor",href:"#window","aria-label":'Permalink to "window(*k*) <VersionBadge version="0.2.3" /> {#window}"'},"​",-1))]),s[36]||(s[36]=r("",8))])}}});export{G as __pageData,J as default};
