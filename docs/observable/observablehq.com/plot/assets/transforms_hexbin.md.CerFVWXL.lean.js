import{p as T,D as g,h as m,v as B,C as b,c as _,o as w,j as i,G as e,ah as n,a as t,t as k,a2 as P,ak as A,N as F,k as f}from"./chunks/framework.DM5DyJ2q.js";import{s as S,c as I,b as v,B as V,A as j,e as r,bv as o,t as O,C as x,bu as N,bY as D,aW as R,aY as Y}from"./chunks/theme.C_36pXDy.js";import{f as z}from"./chunks/feature.DXDMwmIR.js";import{m as W}from"./chunks/mesh.DUGB6pHu.js";const $={id:"hexbin-transform",tabindex:"-1"},G={class:"language-js vp-adaptive-theme"},H={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},U={class:"line"},M={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},X={class:"label-input"},J={style:{"font-variant-numeric":"tabular-nums"}},L={class:"language-js vp-adaptive-theme"},K={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},Q={class:"line"},Z={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},ss={class:"language-js vp-adaptive-theme"},is={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},ts={class:"line"},as={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},ns={class:"language-js vp-adaptive-theme"},es={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},ls={class:"line"},hs={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},gs=JSON.parse('{"title":"Hexbin transform","description":"","frontmatter":{},"headers":[],"relativePath":"transforms/hexbin.md","filePath":"transforms/hexbin.md"}'),os={name:"transforms/hexbin.md"},us=Object.assign(os,{setup(rs){const E=T(20),l=g([{weight:31,height:1.21,sex:"female"},{weight:170,height:2.21,sex:"male"}]),u=g([]),p=g(null),C=m(()=>p.value?z(p.value,p.value.objects.nation):{type:null}),c=m(()=>p.value?W(p.value,p.value.objects.states,(a,s)=>a!==s):{type:null}),y=S({color:{type:"categorical"}}).range;return B(()=>{I("../data/athletes.csv",v).then(a=>l.value=a),V("../data/walmarts.tsv",v).then(a=>u.value=a),j("../data/us-counties-10m.json").then(a=>p.value=a)}),(a,s)=>{const d=b("VersionBadge"),h=b("PlotRender");return w(),_("div",null,[i("h1",$,[s[1]||(s[1]=t("Hexbin transform ")),e(d,{version:"0.5.0"}),s[2]||(s[2]=t()),s[3]||(s[3]=i("a",{class:"header-anchor",href:"#hexbin-transform","aria-label":'Permalink to "Hexbin transform <VersionBadge version="0.5.0" />"'},"​",-1))]),s[57]||(s[57]=i("p",null,[t("The "),i("strong",null,"hexbin transform"),t(" groups two-dimensional quantitative or temporal data — continuous measurements such as heights, weights, or temperatures — into discrete hexagonal bins. You can then compute summary statistics for each bin, such as a count, sum, or proportion. The hexbin transform is most often used to make heatmaps with the "),i("a",{href:"./../marks/dot"},"dot mark"),t(".")],-1)),s[58]||(s[58]=i("p",null,[t("For example, the heatmap below shows the weights and heights of Olympic athletes. The color of each hexagon represents the number ("),i("em",null,"count"),t(") of athletes with similar weight and height.")],-1)),e(h,{defer:"",mark:r(l.value,o({fill:"count"},{x:"weight",y:"height"})),options:{color:{scheme:a.$dark?"turbo":"YlGnBu"}}},null,8,["mark","options"]),s[59]||(s[59]=i("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-olympians-hexbin",target:"_blank",title:"Open on Observable"},"Fork",-1)),i("div",G,[s[9]||(s[9]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[10]||(s[10]=i("span",{class:"lang"},"js",-1)),i("pre",H,[i("code",null,[s[8]||(s[8]=n("",4)),i("span",U,[s[4]||(s[4]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  .",-1)),s[5]||(s[5]=i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plot",-1)),s[6]||(s[6]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({color: {scheme: ",-1)),i("span",M,'"'+k(a.$dark?"turbo":"YlGnBu")+'"',1),s[7]||(s[7]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}})",-1))])])])]),s[60]||(s[60]=n("",2)),i("p",null,[i("label",X,[s[11]||(s[11]=t(" Bin width: ")),P(i("input",{type:"range","onUpdate:modelValue":s[0]||(s[0]=q=>E.value=q),min:"0",max:"40",step:"0.1"},null,512),[[A,E.value,void 0,{number:!0}]]),i("span",J,k(E.value.toLocaleString("en-US",{minimumFractionDigits:1})),1)])]),e(h,{defer:"",mark:r(l.value,o({r:"count"},{x:"weight",y:"height",binWidth:E.value})),options:{}},null,8,["mark"]),s[61]||(s[61]=n("",3)),e(h,{defer:"",mark:r(l.value,o({fill:"count",r:"count"},{x:"weight",y:"height",stroke:"currentColor"})),options:{color:{scheme:a.$dark?"turbo":"YlGnBu"}}},null,8,["mark","options"]),s[62]||(s[62]=i("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-hexbin-redundant",target:"_blank",title:"Open on Observable"},"Fork",-1)),i("div",L,[s[17]||(s[17]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[18]||(s[18]=i("span",{class:"lang"},"js",-1)),i("pre",K,[i("code",null,[s[16]||(s[16]=n("",4)),i("span",Q,[s[12]||(s[12]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  .",-1)),s[13]||(s[13]=i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plot",-1)),s[14]||(s[14]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({color: {scheme: ",-1)),i("span",Z,'"'+k(a.$dark?"turbo":"YlGnBu")+'"',1),s[15]||(s[15]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}})",-1))])])])]),s[63]||(s[63]=i("div",{class:"tip custom-block"},[i("p",{class:"custom-block-title"},"TIP"),i("p",null,[t("Setting a "),i("strong",null,"stroke"),t(" ensures that the smallest hexagons are visible.")])],-1)),i("p",null,[s[19]||(s[19]=t("Alternatively, the ")),s[20]||(s[20]=i("strong",null,"fill",-1)),s[21]||(s[21]=t(" and ")),s[22]||(s[22]=i("strong",null,"r",-1)),s[23]||(s[23]=t(" channels can encode independent (or “bivariate”) dimensions of data. Below, the ")),s[24]||(s[24]=i("strong",null,"r",-1)),s[25]||(s[25]=t(" channel uses ")),s[26]||(s[26]=i("em",null,"count",-1)),s[27]||(s[27]=t(" as before, while the ")),s[28]||(s[28]=i("strong",null,"fill",-1)),s[29]||(s[29]=t(" channel uses ")),s[30]||(s[30]=i("em",null,"mode",-1)),s[31]||(s[31]=t(" to show the most frequent sex of athletes in each hexagon. The larger athletes are more likely to be ")),i("span",{style:F({borderBottom:`solid 2px ${f(y)[1]}`})},"male",4),s[32]||(s[32]=t(", while the smaller athletes are more likely to be ")),i("span",{style:F({borderBottom:`solid 2px ${f(y)[0]}`})},"female",4),s[33]||(s[33]=t("."))]),e(h,{defer:"",mark:r(l.value,o({fill:"mode",r:"count"},{x:"weight",y:"height",fill:"sex"})),options:{}},null,8,["mark"]),s[64]||(s[64]=n("",3)),e(h,{defer:"",mark:r(l.value,o({stroke:"mode",r:"count"},{x:"weight",y:"height",z:"sex",stroke:"sex"})),options:{}},null,8,["mark"]),s[65]||(s[65]=n("",3)),e(h,{defer:"",mark:O(l.value,o({text:"count"},{x:"weight",y:"height"})),options:{}},null,8,["mark"]),s[66]||(s[66]=n("",3)),e(h,{defer:"",options:{projection:"albers",r:{range:[0,16]},color:{scheme:"spectral",label:"First year opened",legend:!0},marks:[x(c.value,{strokeOpacity:.5}),x(C.value),r(u.value,o({r:"count",fill:"min"},{x:"longitude",y:"latitude",fill:"date"}))]}},null,8,["options"]),s[67]||(s[67]=n("",4)),e(h,{defer:"",options:{marks:[N(),r(l.value,o({r:"count"},{x:"weight",y:"height",fill:"currentColor"}))]}},null,8,["options"]),s[68]||(s[68]=n("",3)),e(h,{defer:"",mark:D(l.value,o({r:"count"},{x:"weight",y:"height"})),options:{}},null,8,["mark"]),s[69]||(s[69]=n("",3)),e(h,{defer:"",mark:r(l.value,o({fill:"count"},{x:"weight",y:"height"})),options:{inset:10,color:{scheme:a.$dark?"turbo":"YlGnBu"}}},null,8,["mark","options"]),s[70]||(s[70]=i("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-hexbin-inset",target:"_blank",title:"Open on Observable"},"Fork",-1)),i("div",ss,[s[37]||(s[37]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[38]||(s[38]=i("span",{class:"lang"},"js",-1)),i("pre",is,[i("code",null,[s[36]||(s[36]=n("",4)),i("span",ts,[s[34]||(s[34]=n("",5)),i("span",as,'"'+k(a.$dark?"turbo":"YlGnBu")+'"',1),s[35]||(s[35]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}})",-1))])])])]),s[71]||(s[71]=i("div",{class:"tip custom-block"},[i("p",{class:"custom-block-title"},"TIP"),i("p",null,[t("You can also set the dot’s "),i("strong",null,"clip"),t(" option to true to prevent the hexagons from escaping.")])],-1)),s[72]||(s[72]=i("p",null,[t("Alternatively, use the "),i("a",{href:"./../marks/axis"},"axis mark"),t(" to draw axes on top of the hexagons.")],-1)),e(h,{defer:"",options:{color:{scheme:a.$dark?"turbo":"YlGnBu"},marks:[r(l.value,o({fill:"count"},{x:"weight",y:"height"})),R(),Y()]}},null,8,["options"]),s[73]||(s[73]=i("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-hexbin-and-axes",target:"_blank",title:"Open on Observable"},"Fork",-1)),i("div",ns,[s[44]||(s[44]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[45]||(s[45]=i("span",{class:"lang"},"js",-1)),i("pre",es,[i("code",null,[s[41]||(s[41]=i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Plot."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plot"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")],-1)),s[42]||(s[42]=t(`
`)),i("span",ls,[s[39]||(s[39]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  color: {scheme: ",-1)),i("span",hs,'"'+k(a.$dark?"turbo":"YlGnBu")+'"',1),s[40]||(s[40]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"},",-1))]),s[43]||(s[43]=n("",12))])])]),s[74]||(s[74]=n("",4)),i("ul",null,[s[56]||(s[56]=n("",17)),i("li",null,[s[46]||(s[46]=i("em",null,"x",-1)),s[47]||(s[47]=t()),e(d,{version:"0.6.12",pr:"1916"}),s[48]||(s[48]=t(" - the hexagon’s ")),s[49]||(s[49]=i("em",null,"x",-1)),s[50]||(s[50]=t(" center"))]),i("li",null,[s[51]||(s[51]=i("em",null,"y",-1)),s[52]||(s[52]=t()),e(d,{version:"0.6.12",pr:"1916"}),s[53]||(s[53]=t(" - the hexagon’s ")),s[54]||(s[54]=i("em",null,"y",-1)),s[55]||(s[55]=t(" center"))])]),s[75]||(s[75]=n("",7))])}}});export{gs as __pageData,us as default};
