import{A as F,C as g,t as _,bs as l,bd as C,e as p,br as u,bv as T,bK as P,aK as B}from"./chunks/theme.C_36pXDy.js";import{f as c}from"./chunks/feature.DXDMwmIR.js";import{m as j}from"./chunks/mesh.DUGB6pHu.js";import{D as S,h as k,v as A,C as m,c as q,o as x,j as i,G as n,ah as a,a as e,t as b}from"./chunks/framework.DM5DyJ2q.js";const V={id:"centroid-transform",tabindex:"-1"},I={class:"language-js vp-adaptive-theme"},N={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},O={class:"line"},w={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},D={class:"language-js vp-adaptive-theme"},R={class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},G={class:"line"},J={style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},W=JSON.parse('{"title":"Centroid transform","description":"","frontmatter":{},"headers":[],"relativePath":"transforms/centroid.md","filePath":"transforms/centroid.md"}'),z={name:"transforms/centroid.md"},L=Object.assign(z,{setup(K){const t=S(null),y=k(()=>t.value?j(t.value,t.value.objects.states):{type:null}),d=k(()=>t.value?c(t.value,t.value.objects.states).features:[]),r=k(()=>t.value?c(t.value,t.value.objects.counties).features:[]),v=k(()=>t.value?c(t.value,t.value.objects.nation):[]);return A(()=>{F("../data/us-counties-10m.json").then(h=>t.value=h)}),(h,s)=>{const f=m("VersionBadge"),o=m("PlotRender");return x(),q("div",null,[i("h1",V,[s[0]||(s[0]=e("Centroid transform ")),n(f,{version:"0.6.2"}),s[1]||(s[1]=e()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#centroid-transform","aria-label":'Permalink to "Centroid transform <VersionBadge version="0.6.2" />"'},"â€‹",-1))]),s[18]||(s[18]=i("p",null,[e("Plot offers two transforms that derive centroids from GeoJSON geometries: "),i("a",{href:"#centroid"},"centroid"),e(" and "),i("a",{href:"#geoCentroid"},"geoCentroid"),e(". These transforms can be used by any mark that accepts "),i("strong",null,"x"),e(" and "),i("strong",null,"y"),e(" channels. Below, a "),i("a",{href:"./../marks/text"},"text mark"),e(" labels the U.S. states.")],-1)),n(o,{defer:"",options:{projection:"albers-usa",marks:[g(y.value),_(d.value,l({text:E=>E.properties.name,fill:"currentColor",stroke:"var(--vp-c-bg)"}))]}},null,8,["options"]),s[19]||(s[19]=i("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-state-labels",target:"_blank",title:"Open on Observable"},"Fork",-1)),i("div",I,[s[10]||(s[10]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[11]||(s[11]=i("span",{class:"lang"},"js",-1)),i("pre",N,[i("code",null,[s[5]||(s[5]=a("",8)),i("span",O,[s[3]||(s[3]=a("",13)),i("span",w,'"'+b(h.$dark?"black":"white")+'"',1),s[4]||(s[4]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}))",-1))]),s[6]||(s[6]=e(`
`)),s[7]||(s[7]=i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ]")],-1)),s[8]||(s[8]=e(`
`)),s[9]||(s[9]=i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")],-1))])])]),s[20]||(s[20]=i("p",null,[e("For fun, we can pass county centroids to the "),i("a",{href:"./../marks/delaunay"},"voronoi mark"),e(".")],-1)),n(o,{defer:"",mark:C(r.value,l()),options:{projection:"albers"}},null,8,["mark"]),s[21]||(s[21]=a("",4)),n(o,{defer:"",mark:p(r.value,l()),options:{projection:"albers-usa"}},null,8,["mark"]),s[22]||(s[22]=a("",3)),n(o,{defer:"",mark:p(r.value,u()),options:{projection:"albers-usa"}},null,8,["mark"]),s[23]||(s[23]=a("",3)),n(o,{defer:"",mark:p(r.value,T({r:"count"},u())),options:{projection:"albers"}},null,8,["mark"]),s[24]||(s[24]=a("",3)),n(o,{defer:"",options:{projection:"albers-usa",marks:[g(y.value,{strokeOpacity:.2}),g(v.value),p(d.value,l({fill:"var(--vp-c-red)",stroke:"var(--vp-c-bg-alt)"})),P(d.value,B(l({title:E=>E.properties.name})))]}},null,8,["options"]),s[25]||(s[25]=i("a",{class:"plot-fork no-icon",href:"https://observablehq.com/@observablehq/plot-state-centroids",target:"_blank",title:"Open on Observable"},"Fork",-1)),i("div",D,[s[16]||(s[16]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[17]||(s[17]=i("span",{class:"lang"},"js",-1)),i("pre",R,[i("code",null,[s[14]||(s[14]=a("",10)),i("span",G,[s[12]||(s[12]=a("",7)),i("span",J,'"'+b(h.$dark?"black":"white")+'"',1),s[13]||(s[13]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})),",-1))]),s[15]||(s[15]=a("",6))])])]),s[26]||(s[26]=a("",6))])}}});export{W as __pageData,L as default};
